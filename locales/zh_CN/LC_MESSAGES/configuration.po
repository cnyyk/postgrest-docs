# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Joe Nelson, Steve Chavez
# This file is distributed under the same license as the PostgREST package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: PostgREST 9.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-10 20:06+0800\n"
"PO-Revision-Date: 2022-01-10 22:11+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../configuration.rst:4
msgid "Configuration"
msgstr "配置"

#: ../../configuration.rst:6
msgid ""
"PostgREST reads a configuration file to determine information about the "
"database and how to serve client requests. There is no predefined location "
"for this file, you must specify the file path as the one and only argument to "
"the server:"
msgstr ""

#: ../../configuration.rst:14
msgid ""
"Configuration can be reloaded without restarting the server. See :ref:"
"`config_reloading`."
msgstr ""

#: ../../configuration.rst:16
msgid ""
"The configuration file must contain a set of key value pairs. At minimum you "
"must include these keys:"
msgstr ""

#: ../../configuration.rst:33
msgid ""
"The user specified in the db-uri is also known as the authenticator role. For "
"more information about the anonymous vs authenticator roles see the :ref:"
"`roles`."
msgstr ""

#: ../../configuration.rst:38
msgid "Environment Variables"
msgstr "环境变量"

#: ../../configuration.rst:40
msgid ""
"You can also set these :ref:`configuration parameters <config_full_list>` "
"using environment variables. They are capitalized, have a ``PGRST_`` prefix, "
"and use underscores. For example: ``PGRST_DB_URI`` corresponds to ``db-uri`` "
"and ``PGRST_APP_SETTINGS_*`` to ``app.settings.*``."
msgstr ""

#: ../../configuration.rst:45
msgid "Configuration Reloading"
msgstr "配置重载"

#: ../../configuration.rst:47
msgid ""
"To reload the configuration without restarting the PostgREST server, send a "
"SIGUSR2 signal to the server process."
msgstr ""

#: ../../configuration.rst:53
msgid ""
"This method does not reload :ref:`env_variables_config` and it will not work "
"for reloading a Docker container configuration. In these cases, you need to "
"restart the PostgREST server or use the :ref:`in_db_config` as an alternative."
msgstr ""

#: ../../configuration.rst:57
msgid ""
"The following settings will not be reread when reloading the configuration. "
"You will need to restart PostgREST in that case."
msgstr ""

#: ../../configuration.rst:59
msgid ":ref:`db-uri`"
msgstr ""

#: ../../configuration.rst:60
msgid ":ref:`db-pool`"
msgstr ""

#: ../../configuration.rst:61
msgid ":ref:`db-pool-timeout`"
msgstr ""

#: ../../configuration.rst:62
msgid ":ref:`server-host`"
msgstr ""

#: ../../configuration.rst:63
msgid ":ref:`server-port`"
msgstr ""

#: ../../configuration.rst:64
msgid ":ref:`server-unix-socket`"
msgstr ""

#: ../../configuration.rst:65
msgid ":ref:`server-unix-socket-mode`"
msgstr ""

#: ../../configuration.rst:70
msgid "In-Database Configuration"
msgstr "库内配置"

#: ../../configuration.rst:72
msgid ""
"By adding settings to the **authenticator** role (see :ref:`roles`), you can "
"make the database the single source of truth for PostgREST's configuration. "
"This is enabled by :ref:`db-config`."
msgstr ""

#: ../../configuration.rst:75
msgid ""
"For example, you can configure :ref:`db-schemas` and :ref:`jwt-secret` like "
"this:"
msgstr ""

#: ../../configuration.rst:82
msgid ""
"You can use both database-specific settings with `IN DATABASE` and cluster-"
"wide settings without it. Database-specific settings will override cluster-"
"wide settings if both are used for the same parameter."
msgstr ""

#: ../../configuration.rst:84
msgid ""
"Note that underscores(``_``) need to be used instead of dashes(``-``) for the "
"in-database config parameters."
msgstr ""

#: ../../configuration.rst:88
msgid ""
"For altering a role in this way, you need a SUPERUSER. You might not be able "
"to use this configuration mode on cloud-hosted databases."
msgstr ""

#: ../../configuration.rst:90
msgid ""
"When using both the configuration file and the in-database configuration, the "
"latter takes precedence."
msgstr ""

#: ../../configuration.rst:94
msgid ""
"If direct connections to the database are allowed, then it's not safe to use "
"the in-db configuration for storing the :ref:`jwt-secret`. The settings of "
"every role are PUBLIC - they can be viewed by any user that queries the "
"``pg_catalog.pg_db_role_setting`` table. In this case you should keep the :"
"ref:`jwt-secret` in the configuration file or as environment variables."
msgstr ""

#: ../../configuration.rst:101
msgid "In-database configuration reloading"
msgstr ""

#: ../../configuration.rst:103
msgid ""
"To reload the in-database configuration from within the database, you can use "
"a NOTIFY command."
msgstr ""

#: ../../configuration.rst:109
msgid ""
"The ``\"pgrst\"`` notification channel is enabled by default. For configuring "
"the channel, see :ref:`db-channel` and :ref:`db-channel-enabled`."
msgstr ""

#: ../../configuration.rst:114
msgid "List of parameters"
msgstr "参数列表"

#: ../../configuration.rst:117
msgid "Name"
msgstr ""

#: ../../configuration.rst:117
msgid "Type"
msgstr ""

#: ../../configuration.rst:117
msgid "Default"
msgstr ""

#: ../../configuration.rst:117
msgid "Required"
msgstr ""

#: ../../configuration.rst:117
msgid "Reloadable"
msgstr ""

#: ../../configuration.rst:119 ../../configuration.rst:151
msgid "app.settings.*"
msgstr ""

#: ../../configuration.rst:119 ../../configuration.rst:120
#: ../../configuration.rst:121 ../../configuration.rst:124
#: ../../configuration.rst:128 ../../configuration.rst:130
#: ../../configuration.rst:131 ../../configuration.rst:132
#: ../../configuration.rst:134 ../../configuration.rst:135
#: ../../configuration.rst:136 ../../configuration.rst:138
#: ../../configuration.rst:139 ../../configuration.rst:140
#: ../../configuration.rst:141 ../../configuration.rst:142
#: ../../configuration.rst:144 ../../configuration.rst:145
msgid "String"
msgstr ""

#: ../../configuration.rst:119 ../../configuration.rst:120
#: ../../configuration.rst:121 ../../configuration.rst:122
#: ../../configuration.rst:123 ../../configuration.rst:124
#: ../../configuration.rst:125 ../../configuration.rst:128
#: ../../configuration.rst:129 ../../configuration.rst:130
#: ../../configuration.rst:131 ../../configuration.rst:132
#: ../../configuration.rst:133 ../../configuration.rst:134
#: ../../configuration.rst:135 ../../configuration.rst:136
#: ../../configuration.rst:137 ../../configuration.rst:138
#: ../../configuration.rst:139 ../../configuration.rst:140
#: ../../configuration.rst:141
msgid "Y"
msgstr ""

#: ../../configuration.rst:120 ../../configuration.rst:163
msgid "db-anon-role"
msgstr ""

#: ../../configuration.rst:121 ../../configuration.rst:175
msgid "db-channel"
msgstr ""

#: ../../configuration.rst:121
msgid "pgrst"
msgstr ""

#: ../../configuration.rst:122 ../../configuration.rst:187
msgid "db-channel-enabled"
msgstr ""

#: ../../configuration.rst:122 ../../configuration.rst:123
#: ../../configuration.rst:129 ../../configuration.rst:133
#: ../../configuration.rst:137
msgid "Boolean"
msgstr ""

#: ../../configuration.rst:122 ../../configuration.rst:123
#: ../../configuration.rst:129 ../../configuration.rst:133
msgid "True"
msgstr ""

#: ../../configuration.rst:123 ../../configuration.rst:201
msgid "db-config"
msgstr ""

#: ../../configuration.rst:124 ../../configuration.rst:213
msgid "db-extra-search-path"
msgstr ""

#: ../../configuration.rst:124
msgid "public"
msgstr ""

#: ../../configuration.rst:125 ../../configuration.rst:229
msgid "db-max-rows"
msgstr ""

#: ../../configuration.rst:125 ../../configuration.rst:126
#: ../../configuration.rst:127 ../../configuration.rst:143
msgid "Int"
msgstr ""

#: ../../configuration.rst:125
msgid "∞"
msgstr ""

#: ../../configuration.rst:126 ../../configuration.rst:243
msgid "db-pool"
msgstr ""

#: ../../configuration.rst:126 ../../configuration.rst:127
msgid "10"
msgstr ""

#: ../../configuration.rst:127 ../../configuration.rst:255
msgid "db-pool-timeout"
msgstr ""

#: ../../configuration.rst:128 ../../configuration.rst:268
msgid "db-pre-request"
msgstr ""

#: ../../configuration.rst:129 ../../configuration.rst:282
msgid "db-prepared-statements"
msgstr ""

#: ../../configuration.rst:130 ../../configuration.rst:298
msgid "db-schemas"
msgstr ""

#: ../../configuration.rst:131 ../../configuration.rst:335
msgid "db-tx-end"
msgstr ""

#: ../../configuration.rst:131
msgid "commit"
msgstr ""

#: ../../configuration.rst:132 ../../configuration.rst:361
msgid "db-uri"
msgstr ""

#: ../../configuration.rst:133 ../../configuration.rst:379
msgid "db-use-legacy-gucs"
msgstr ""

#: ../../configuration.rst:134 ../../configuration.rst:393
msgid "jwt-aud"
msgstr ""

#: ../../configuration.rst:135 ../../configuration.rst:405
msgid "jwt-role-claim-key"
msgstr ""

#: ../../configuration.rst:135
msgid ".role"
msgstr ""

#: ../../configuration.rst:136 ../../configuration.rst:429
msgid "jwt-secret"
msgstr ""

#: ../../configuration.rst:137 ../../configuration.rst:441
msgid "jwt-secret-is-base64"
msgstr ""

#: ../../configuration.rst:137
msgid "False"
msgstr ""

#: ../../configuration.rst:138 ../../configuration.rst:453
msgid "log-level"
msgstr ""

#: ../../configuration.rst:138
msgid "error"
msgstr ""

#: ../../configuration.rst:139 ../../configuration.rst:482
msgid "openapi-mode"
msgstr ""

#: ../../configuration.rst:139
msgid "follow-privileges"
msgstr ""

#: ../../configuration.rst:140 ../../configuration.rst:508
msgid "openapi-server-proxy-uri"
msgstr ""

#: ../../configuration.rst:141 ../../configuration.rst:536
msgid "raw-media-types"
msgstr ""

#: ../../configuration.rst:142 ../../configuration.rst:557
msgid "server-host"
msgstr ""

#: ../../configuration.rst:142
msgid "!4"
msgstr ""

#: ../../configuration.rst:143 ../../configuration.rst:575
msgid "server-port"
msgstr ""

#: ../../configuration.rst:143
msgid "3000"
msgstr ""

#: ../../configuration.rst:144 ../../configuration.rst:587
msgid "server-unix-socket"
msgstr ""

#: ../../configuration.rst:145 ../../configuration.rst:604
msgid "server-unix-socket-mode"
msgstr ""

#: ../../configuration.rst:145
msgid "660"
msgstr ""

#: ../../configuration.rst:154 ../../configuration.rst:166
#: ../../configuration.rst:178 ../../configuration.rst:190
#: ../../configuration.rst:204 ../../configuration.rst:216
#: ../../configuration.rst:234 ../../configuration.rst:246
#: ../../configuration.rst:258 ../../configuration.rst:273
#: ../../configuration.rst:285 ../../configuration.rst:303
#: ../../configuration.rst:338 ../../configuration.rst:364
#: ../../configuration.rst:382 ../../configuration.rst:396
#: ../../configuration.rst:410 ../../configuration.rst:432
#: ../../configuration.rst:444 ../../configuration.rst:456
#: ../../configuration.rst:485 ../../configuration.rst:511
#: ../../configuration.rst:539 ../../configuration.rst:560
#: ../../configuration.rst:578 ../../configuration.rst:590
#: ../../configuration.rst:607
msgid "**Environment**"
msgstr ""

#: ../../configuration.rst:154
msgid "PGRST_APP_SETTINGS_*"
msgstr ""

#: ../../configuration.rst:155 ../../configuration.rst:167
#: ../../configuration.rst:179 ../../configuration.rst:191
#: ../../configuration.rst:205 ../../configuration.rst:217
#: ../../configuration.rst:235 ../../configuration.rst:247
#: ../../configuration.rst:259 ../../configuration.rst:274
#: ../../configuration.rst:286 ../../configuration.rst:304
#: ../../configuration.rst:339 ../../configuration.rst:365
#: ../../configuration.rst:383 ../../configuration.rst:397
#: ../../configuration.rst:411 ../../configuration.rst:433
#: ../../configuration.rst:445 ../../configuration.rst:457
#: ../../configuration.rst:486 ../../configuration.rst:512
#: ../../configuration.rst:540 ../../configuration.rst:561
#: ../../configuration.rst:579 ../../configuration.rst:591
#: ../../configuration.rst:608
msgid "**In-Database**"
msgstr ""

#: ../../configuration.rst:155
msgid "pgrst.app_settings_*"
msgstr ""

#: ../../configuration.rst:158
msgid ""
"Arbitrary settings that can be used to pass in secret keys directly as "
"strings, or via OS environment variables. For instance: :code:`app.settings."
"jwt_secret = \"$(MYAPP_JWT_SECRET)\"` will take :code:`MYAPP_JWT_SECRET` from "
"the environment and make it available to postgresql functions as :code:"
"`current_setting('app.settings.jwt_secret')`."
msgstr ""

#: ../../configuration.rst:166
msgid "PGRST_DB_ANON_ROLE"
msgstr ""

#: ../../configuration.rst:167 ../../configuration.rst:179
#: ../../configuration.rst:191 ../../configuration.rst:205
#: ../../configuration.rst:247 ../../configuration.rst:259
#: ../../configuration.rst:365 ../../configuration.rst:457
msgid "`n/a`"
msgstr ""

#: ../../configuration.rst:170
msgid ""
"The database role to use when executing commands on behalf of unauthenticated "
"clients. For more information, see :ref:`roles`."
msgstr ""

#: ../../configuration.rst:178
msgid "PGRST_DB_CHANNEL"
msgstr ""

#: ../../configuration.rst:182
msgid ""
"The name of the notification channel that PostgREST uses for :ref:"
"`schema_reloading` and configuration reloading."
msgstr ""

#: ../../configuration.rst:190
msgid "PGRST_DB_CHANNEL_ENABLED"
msgstr ""

#: ../../configuration.rst:194
msgid ""
"When this is set to :code:`true`, the notification channel specified in :ref:"
"`db-channel` is enabled."
msgstr ""

#: ../../configuration.rst:196
msgid ""
"You should set this to ``false`` when using PostgresSQL behind an external "
"connection pooler such as PgBouncer working in transaction pooling mode. See :"
"ref:`this section <external_connection_poolers>` for more information."
msgstr ""

#: ../../configuration.rst:204
msgid "PGRST_DB_CONFIG"
msgstr ""

#: ../../configuration.rst:208
msgid "Enables the in-database configuration."
msgstr ""

#: ../../configuration.rst:216
msgid "PGRST_DB_EXTRA_SEARCH_PATH"
msgstr ""

#: ../../configuration.rst:217
msgid "pgrst.db_extra_search_path"
msgstr ""

#: ../../configuration.rst:220
msgid ""
"Extra schemas to add to the `search_path <https://www.postgresql.org/docs/"
"current/ddl-schemas.html#DDL-SCHEMAS-PATH>`_ of every request. These schemas "
"tables, views and stored procedures **don't get API endpoints**, they can "
"only be referred from the database objects inside your :ref:`db-schemas`."
msgstr ""

#: ../../configuration.rst:222
msgid ""
"This parameter was meant to make it easier to use **PostgreSQL extensions** "
"(like PostGIS) that are outside of the :ref:`db-schemas`."
msgstr ""

#: ../../configuration.rst:224
msgid ""
"Multiple schemas can be added in a comma-separated string, e.g. ``public, "
"extensions``."
msgstr ""

#: ../../configuration.rst:231
msgid ""
"*For backwards compatibility, this config parameter is also available without "
"prefix as \"max-rows\".*"
msgstr ""

#: ../../configuration.rst:234
msgid "PGRST_DB_MAX_ROWS"
msgstr ""

#: ../../configuration.rst:235
msgid "pgrst.db_max_rows"
msgstr ""

#: ../../configuration.rst:238
msgid ""
"A hard limit to the number of rows PostgREST will fetch from a view, table, "
"or stored procedure. Limits payload size for accidental or malicious requests."
msgstr ""

#: ../../configuration.rst:246
msgid "PGRST_DB_POOL"
msgstr ""

#: ../../configuration.rst:250
msgid ""
"Number of connections to keep open in PostgREST's database pool. Having "
"enough here for the maximum expected simultaneous client connections can "
"improve performance. Note it's pointless to set this higher than the :code:"
"`max_connections` GUC in your database."
msgstr ""

#: ../../configuration.rst:258
msgid "PGRST_DB_POOL_TIMEOUT"
msgstr ""

#: ../../configuration.rst:262
msgid ""
"Time to live, in seconds, for an idle database pool connection. If the "
"timeout is reached the connection will be closed. Once a new request arrives "
"a new connection will be started."
msgstr ""

#: ../../configuration.rst:270
msgid ""
"*For backwards compatibility, this config parameter is also available without "
"prefix as \"pre-request\".*"
msgstr ""

#: ../../configuration.rst:273
msgid "PGRST_DB_PRE_REQUEST"
msgstr ""

#: ../../configuration.rst:274
msgid "pgrst.db_pre_request"
msgstr ""

#: ../../configuration.rst:277
msgid ""
"A schema-qualified stored procedure name to call right after switching roles "
"for a client request. This provides an opportunity to modify SQL variables or "
"raise an exception to prevent the request from completing."
msgstr ""

#: ../../configuration.rst:285
msgid "PGRST_DB_PREPARED_STATEMENTS"
msgstr ""

#: ../../configuration.rst:286
msgid "pgrst.db_prepared_statements"
msgstr ""

#: ../../configuration.rst:289
msgid "Enables or disables prepared statements."
msgstr ""

#: ../../configuration.rst:291
msgid ""
"When disabled, the generated queries will be parameterized (invulnerable to "
"SQL injection) but they will not be prepared (cached in the database "
"session). Not using prepared statements will noticeably decrease performance, "
"so it's recommended to always have this setting enabled."
msgstr ""

#: ../../configuration.rst:293
msgid ""
"You should only set this to ``false`` when using PostgresSQL behind an "
"external connection pooler such as PgBouncer working in transaction pooling "
"mode. See :ref:`this section <external_connection_poolers>` for more "
"information."
msgstr ""

#: ../../configuration.rst:300
msgid ""
"*For backwards compatibility, this config parameter is also available in "
"singular as \"db-schema\".*"
msgstr ""

#: ../../configuration.rst:303
msgid "PGRST_DB_SCHEMAS"
msgstr ""

#: ../../configuration.rst:304
msgid "pgrst.db_schemas"
msgstr ""

#: ../../configuration.rst:307
msgid ""
"The database schema to expose to REST clients. Tables, views and stored "
"procedures in this schema will get API endpoints."
msgstr ""

#: ../../configuration.rst:313
msgid ""
"This schema gets added to the `search_path <https://www.postgresql.org/docs/"
"current/ddl-schemas.html#DDL-SCHEMAS-PATH>`_ of every request."
msgstr ""

#: ../../configuration.rst:316
msgid "List of schemas"
msgstr ""

#: ../../configuration.rst:318
msgid ""
"You can also specify a list of schemas that can be used for **schema-based "
"multitenancy** and **api versioning** by :ref:`multiple-schemas`. Example:"
msgstr ""

#: ../../configuration.rst:324
msgid ""
"If you don't :ref:`Switch Schemas <multiple-schemas>`, the first schema in "
"the list(``tenant1`` in this case) is chosen as the default schema."
msgstr ""

#: ../../configuration.rst:326
msgid ""
"*Only the chosen schema* gets added to the `search_path <https://www."
"postgresql.org/docs/current/ddl-schemas.html#DDL-SCHEMAS-PATH>`_ of every "
"request."
msgstr ""

#: ../../configuration.rst:330
msgid "Never expose private schemas in this way. See :ref:`schema_isolation`."
msgstr ""

#: ../../configuration.rst:338
msgid "PGRST_DB_TX_END"
msgstr ""

#: ../../configuration.rst:339
msgid "pgrst.db_tx_end"
msgstr ""

#: ../../configuration.rst:342
msgid "Specifies how to terminate the database transactions."
msgstr ""

#: ../../configuration.rst:364
msgid "PGRST_DB_URI"
msgstr ""

#: ../../configuration.rst:368
msgid ""
"The standard connection PostgreSQL `URI format <https://www.postgresql.org/"
"docs/current/libpq-connect.html#LIBPQ-CONNSTRING>`_. Symbols and unusual "
"characters in the password or other fields should be percent encoded to avoid "
"a parse error. If enforcing an SSL connection to the database is required you "
"can use `sslmode <https://www.postgresql.org/docs/current/libpq-ssl."
"html#LIBPQ-SSL-SSLMODE-STATEMENTS>`_ in the URI, for example ``postgres://"
"user:pass@host:5432/dbname?sslmode=require``."
msgstr ""

#: ../../configuration.rst:370
msgid ""
"When running PostgREST on the same machine as PostgreSQL, it is also possible "
"to connect to the database using a `Unix socket <https://en.wikipedia.org/"
"wiki/Unix_domain_socket>`_ and the `Peer Authentication method <https://www."
"postgresql.org/docs/current/auth-peer.html>`_ as an alternative to TCP/IP "
"communication and authentication with a password, this also grants higher "
"performance.  To do this you can omit the host and the password, e.g. "
"``postgres://user@/dbname``, see the `libpq connection string <https://www."
"postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING>`_ "
"documentation for more details."
msgstr ""

#: ../../configuration.rst:372
msgid ""
"On older systems like Centos 6, with older versions of libpq, a different db-"
"uri syntax has to be used. In this case the URI is a string of space "
"separated key-value pairs (key=value), so the example above would be :code:`"
"\"host=host user=user port=5432 dbname=dbname password=pass\"`."
msgstr ""

#: ../../configuration.rst:374
msgid ""
"Choosing a value for this parameter beginning with the at sign such as "
"``@filename`` (e.g. ``@./configs/my-config``) loads the secret out of an "
"external file."
msgstr ""

#: ../../configuration.rst:382
msgid "PGRST_DB_USE_LEGACY_GUCS"
msgstr ""

#: ../../configuration.rst:383
msgid "pgrst.db_use_legacy_gucs"
msgstr ""

#: ../../configuration.rst:386
msgid ""
"Determine if GUC request settings for headers, cookies and jwt claims use the "
"`legacy names <https://postgrest.org/en/v8.0/api.html#accessing-request-"
"headers-cookies-and-jwt-claims>`_ (string with dashes, invalid starting from "
"PostgreSQL v14) with text values instead of the :ref:`new names "
"<guc_req_headers_cookies_claims>` (string without dashes, valid on all "
"PostgreSQL versions) with json values."
msgstr ""

#: ../../configuration.rst:388
msgid "On PostgreSQL versions 14 and above, this parameter is ignored."
msgstr ""

#: ../../configuration.rst:396
msgid "PGRST_JWT_AUD"
msgstr ""

#: ../../configuration.rst:397
msgid "pgrst.jwt_aud"
msgstr ""

#: ../../configuration.rst:400
msgid ""
"Specifies the `JWT audience claim <https://datatracker.ietf.org/doc/html/"
"rfc7519#section-4.1.3>`_. If this claim is present in the client provided JWT "
"then you must set this to the same value as in the JWT, otherwise verifying "
"the JWT will fail."
msgstr ""

#: ../../configuration.rst:407
msgid ""
"*For backwards compatibility, this config parameter is also available without "
"prefix as \"role-claim-key\".*"
msgstr ""

#: ../../configuration.rst:410
msgid "PGRST_JWT_ROLE_CLAIM_KEY"
msgstr ""

#: ../../configuration.rst:411
msgid "pgrst.jwt_role_claim_key"
msgstr ""

#: ../../configuration.rst:414
msgid ""
"A JSPath DSL that specifies the location of the :code:`role` key in the JWT "
"claims. This can be used to consume a JWT provided by a third party service "
"like Auth0, Okta or Keycloak. Usage examples:"
msgstr ""

#: ../../configuration.rst:432
msgid "PGRST_JWT_SECRET"
msgstr ""

#: ../../configuration.rst:433
msgid "pgrst.jwt_secret"
msgstr ""

#: ../../configuration.rst:436
msgid ""
"The secret or `JSON Web Key (JWK) (or set) <https://datatracker.ietf.org/doc/"
"html/rfc7517>`_ used to decode JWT tokens clients provide for authentication. "
"For security the key must be **at least 32 characters long**. If this "
"parameter is not specified then PostgREST refuses authentication requests. "
"Choosing a value for this parameter beginning with the at sign such as :code:"
"`@filename` loads the secret out of an external file. This is useful for "
"automating deployments. Note that any binary secrets must be base64 encoded. "
"Both symmetric and asymmetric cryptography are supported. For more info see :"
"ref:`asym_keys`."
msgstr ""

#: ../../configuration.rst:444
msgid "PGRST_JWT_SECRET_IS_BASE64"
msgstr ""

#: ../../configuration.rst:445
msgid "pgrst.jwt_secret_is_base64"
msgstr ""

#: ../../configuration.rst:448
msgid ""
"When this is set to :code:`true`, the value derived from :code:`jwt-secret` "
"will be treated as a base64 encoded secret."
msgstr ""

#: ../../configuration.rst:456
msgid "PGRST_LOG_LEVEL"
msgstr ""

#: ../../configuration.rst:460
msgid "Specifies the level of information to be logged while running PostgREST."
msgstr ""

#: ../../configuration.rst:477
msgid ""
"Because currently there's no buffering for logging, the levels with minimal "
"logging(``crit/error``) will increase throughput."
msgstr ""

#: ../../configuration.rst:485
msgid "PGRST_OPENAPI_MODE"
msgstr ""

#: ../../configuration.rst:486
msgid "pgrst.openapi_mode"
msgstr ""

#: ../../configuration.rst:489
msgid "Specifies how the OpenAPI output should be displayed."
msgstr ""

#: ../../configuration.rst:511
msgid "PGRST_OPENAPI_SERVER_PROXY_URI"
msgstr ""

#: ../../configuration.rst:512
msgid "pgrst.openapi_server_proxy_uri"
msgstr ""

#: ../../configuration.rst:515
msgid ""
"Overrides the base URL used within the OpenAPI self-documentation hosted at "
"the API root path. Use a complete URI syntax :code:`scheme:[//[user:"
"password@]host[:port]][/]path[?query][#fragment]`. Ex. :code:`https://"
"postgrest.com`"
msgstr ""

#: ../../configuration.rst:539
msgid "PGRST_RAW_MEDIA_TYPES"
msgstr ""

#: ../../configuration.rst:540
msgid "pgrst.raw_media_types"
msgstr ""

#: ../../configuration.rst:543
msgid ""
"This serves to extend the `Media Types <https://en.wikipedia.org/wiki/"
"Media_type>`_ that PostgREST currently accepts through an ``Accept`` header."
msgstr ""

#: ../../configuration.rst:545
msgid ""
"These media types can be requested by following the same rules as the ones "
"defined in :ref:`binary_output`."
msgstr ""

#: ../../configuration.rst:547
msgid ""
"As an example, the below config would allow you to request an **image** and a "
"**XML** file by doing a request with ``Accept: image/png`` or ``Accept: text/"
"xml``, respectively."
msgstr ""

#: ../../configuration.rst:560
msgid "PGRST_SERVER_HOST"
msgstr ""

#: ../../configuration.rst:561
msgid "pgrst.server_host"
msgstr ""

#: ../../configuration.rst:564
msgid ""
"Where to bind the PostgREST web server. In addition to the usual address "
"options, PostgREST interprets these reserved addresses with special meanings:"
msgstr ""

#: ../../configuration.rst:566
msgid ":code:`*` - any IPv4 or IPv6 hostname"
msgstr ""

#: ../../configuration.rst:567
msgid ":code:`*4` - any IPv4 or IPv6 hostname, IPv4 preferred"
msgstr ""

#: ../../configuration.rst:568
msgid ":code:`!4` - any IPv4 hostname"
msgstr ""

#: ../../configuration.rst:569
msgid ":code:`*6` - any IPv4 or IPv6 hostname, IPv6 preferred"
msgstr ""

#: ../../configuration.rst:570
msgid ":code:`!6` - any IPv6 hostname"
msgstr ""

#: ../../configuration.rst:578
msgid "PGRST_SERVER_PORT"
msgstr ""

#: ../../configuration.rst:579
msgid "pgrst.server_port"
msgstr ""

#: ../../configuration.rst:582
msgid "The TCP port to bind the web server."
msgstr ""

#: ../../configuration.rst:590
msgid "PGRST_SERVER_UNIX_SOCKET"
msgstr ""

#: ../../configuration.rst:591
msgid "pgrst.server_unix_socket"
msgstr ""

#: ../../configuration.rst:594
msgid ""
"`Unix domain socket <https://en.wikipedia.org/wiki/Unix_domain_socket>`_ "
"where to bind the PostgREST web server. If specified, this takes precedence "
"over :ref:`server-port`. Example:"
msgstr ""

#: ../../configuration.rst:607
msgid "PGRST_SERVER_UNIX_SOCKET_MODE"
msgstr ""

#: ../../configuration.rst:608
msgid "pgrst.server_unix_socket_mode"
msgstr ""

#: ../../configuration.rst:611
msgid ""
"`Unix file mode <https://en.wikipedia.org/wiki/File_system_permissions>`_ to "
"be set for the socket specified in :ref:`server-unix-socket` Needs to be a "
"valid octal between 600 and 777."
msgstr ""
